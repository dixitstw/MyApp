{"ast":null,"code":"var _jsxFileName = \"/home/dipti/Codes/MySocial-Media-App/social-media-app-frontend/src/Component/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../api'; // Import your Axios instance\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  postId\n}) {\n  _s();\n  const [comments, setComments] = useState([]); // State to hold the comments data\n\n  useEffect(() => {\n    fetchComments(); // Fetch comments data when the component mounts\n  }, [postId]);\n  const fetchComments = async () => {\n    try {\n      const response = await axios.post(`/posts/${postId}/:id/comment`, {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      });\n      setComments(response.data);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile-image\",\n          src: comment.author.profileImage,\n          alt: comment.author.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: comment.author.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n// CSS Styles (same as before)\n_s(Comment, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comment;\nconst commentStyles = `\n.comment {\n    margin-top: 10px;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n  }\n  \n  .comment-header {\n    display: flex;\n    align-items: center;\n  }\n  \n  .profile-image {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  \n  .comment-author {\n    font-size: 0.9rem;\n    color: #555;\n  }\n  \n  .comment-content {\n    font-size: 1rem;\n    margin-top: 5px;\n    color: #333;\n  }\n`;\n\n// Create a style element and append the CSS to the head (same as before)\nconst styleElement = document.createElement('style');\nstyleElement.innerHTML = commentStyles;\ndocument.head.appendChild(styleElement);\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","Comment","postId","_s","comments","setComments","fetchComments","response","post","headers","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","className","src","author","profileImage","alt","username","content","_id","_c","commentStyles","styleElement","document","createElement","innerHTML","head","appendChild","$RefreshReg$"],"sources":["/home/dipti/Codes/MySocial-Media-App/social-media-app-frontend/src/Component/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../api'; // Import your Axios instance\nimport Navbar from './Navbar';\n\nfunction Comment({ postId }) {\n  const [comments, setComments] = useState([]); // State to hold the comments data\n\n  useEffect(() => {\n    fetchComments(); // Fetch comments data when the component mounts\n  }, [postId]);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.post(`/posts/${postId}/:id/comment`,\n      {\n      headers: {\n        'Content-type': 'application/json'\n      }}); \n      setComments(response.data);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n\n  return (\n    <div>\n        <Navbar/>\n      {comments.map((comment) => (\n        <div key={comment._id} className=\"comment\">\n          <div className=\"comment-header\">\n            <img className=\"profile-image\" src={comment.author.profileImage} alt={comment.author.username} />\n            <div className=\"comment-author\">{comment.author.username}</div>\n          </div>\n          <div className=\"comment-content\">{comment.content}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// CSS Styles (same as before)\nconst commentStyles = `\n.comment {\n    margin-top: 10px;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n  }\n  \n  .comment-header {\n    display: flex;\n    align-items: center;\n  }\n  \n  .profile-image {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  \n  .comment-author {\n    font-size: 0.9rem;\n    color: #555;\n  }\n  \n  .comment-content {\n    font-size: 1rem;\n    margin-top: 5px;\n    color: #333;\n  }\n`;\n\n// Create a style element and append the CSS to the head (same as before)\nconst styleElement = document.createElement('style');\nstyleElement.innerHTML = commentStyles;\ndocument.head.appendChild(styleElement);\n\nexport default Comment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,QAAQ,CAAC,CAAC;AAC5B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,OAAOA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAE,UAASN,MAAO,cAAa,EAChE;QACAO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MAAC,CAAC,CAAC;MACHJ,WAAW,CAACE,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACF,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACVb,QAAQ,CAACc,GAAG,CAAEC,OAAO,iBACpBnB,OAAA;MAAuBoB,SAAS,EAAC,SAAS;MAAAP,QAAA,gBACxCb,OAAA;QAAKoB,SAAS,EAAC,gBAAgB;QAAAP,QAAA,gBAC7Bb,OAAA;UAAKoB,SAAS,EAAC,eAAe;UAACC,GAAG,EAAEF,OAAO,CAACG,MAAM,CAACC,YAAa;UAACC,GAAG,EAAEL,OAAO,CAACG,MAAM,CAACG;QAAS;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjGjB,OAAA;UAAKoB,SAAS,EAAC,gBAAgB;UAAAP,QAAA,EAAEM,OAAO,CAACG,MAAM,CAACG;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACNjB,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAP,QAAA,EAAEM,OAAO,CAACO;MAAO;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GALhDE,OAAO,CAACQ,GAAG;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMhB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;;AAEA;AAAAd,EAAA,CApCSF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAqChB,MAAM4B,aAAa,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AACpDF,YAAY,CAACG,SAAS,GAAGJ,aAAa;AACtCE,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,YAAY,CAAC;AAEvC,eAAe7B,OAAO;AAAC,IAAA2B,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}